#ifndef DRIVER_X86ARCH_ISR_H
#define DRIVER_X86ARCH_ISR_H
#include "IDT.h"



#define DRIVER_X86_ISR_DIV_BY_ZERO	0
#define DRIVER_X86_ISR_DEBUG		1
#define DRIVER_X86_ISR_NMI		2
#define DRIVER_X86_ISR_BREAKPOINT	3
#define DRIVER_X86_ISR_OVERFLOW		4
#define DRIVER_X86_ISR_OUTOFBOUND	5
#define DRIVER_X86_ISR_INVALID_OPCODE	6
#define DRIVER_X86_ISR_NO_COPROCESSOR	7
#define DRIVER_X86_ISR_DOUBLE_FAULT	8
#define DRIVER_X86_ISR_COPROCESSOR_SEG_OVERRUN	9
#define DRIVER_X86_ISR_BAD_TSS		10
#define DRIVER_X86_ISR_SEG_NOT_PRESENT	11
#define DRIVER_X86_ISR_STACK_FAULT	12
#define DRIVER_X86_ISR_GENERAL_PROTECT	13
#define DRIVER_X86_ISR_PAGE_FAULT	14
#define DRIVER_X86_ISR_UNKNOWN_INT	15
#define DRIVER_X86_ISR_COPROCESSOR_FAULT	16
#define DRIVER_X86_ISR_ALIGN_CHECK	17
#define DRIVER_X86_ISR_MACHINE_CHECK	18
#define DRIVER_X86_ISR_RESERVED		19




void DRIVER_X86_InstallISRCallback(int int_no, void(*func)(struct DRIVER_X86_InterruptRegs* ));


void* DRIVER_X86_GetISRCallback(int int_no);

#define DRIVER_X86_UninstallISRCallback(int_no)\
	DRIVER_X86_InstallISRCallback(int_no,0)


#endif
